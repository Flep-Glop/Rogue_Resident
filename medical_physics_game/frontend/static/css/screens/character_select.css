/* Modern Character Selection Screen Styles */

/* Container for character selection screen */
.character-selection-container {
    max-width: var(--container-lg);
    margin: 0 auto;
    padding: var(--spacing-lg);
  }
  
  /* Animated title with glow effect */
  .selection-title {
    font-size: 3rem;
    color: var(--color-primary);
    text-align: center;
    margin-bottom: var(--spacing-lg);
    text-shadow: 0 0 10px var(--glow-primary);
    animation: title-pulse 3s infinite alternate;
  }
  
  @keyframes title-pulse {
    0% { text-shadow: 0 0 10px var(--color-primary-dark); }
    100% { text-shadow: 0 0 20px var(--color-primary-light); }
  }
  
  .selection-subtitle {
    font-size: 1.2rem;
    color: var(--color-secondary);
    text-align: center;
    margin-bottom: var(--spacing-xl);
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
  }
  
  /* Character grid with modern layout */
  .character-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: var(--spacing-lg);
    margin-bottom: var(--spacing-xl);
  }
  
  /* Character card with hover effects and transitions */
  .character-card {
    background-color: var(--color-bg-light);
    border: var(--border-thickness) solid var(--color-primary-dark);
    border-radius: 8px;
    padding: var(--spacing-md);
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    cursor: pointer;
  }
  
  /* Card hover effect */
  .character-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.4);
    border-color: var(--color-primary);
  }
  
  /* Selected card style */
  .character-card.selected {
    border-color: var(--color-secondary);
    box-shadow: 0 0 20px var(--color-secondary);
    transform: translateY(-5px) scale(1.02);
  }
  
  /* Character card highlight before and after elements */
  .character-card::before,
  .character-card::after {
    content: '';
    position: absolute;
    width: 15px;
    height: 15px;
    transition: all 0.3s ease;
  }
  
  .character-card::before {
    top: 0;
    left: 0;
    border-top: 3px solid transparent;
    border-left: 3px solid transparent;
  }
  
  .character-card::after {
    bottom: 0;
    right: 0;
    border-bottom: 3px solid transparent;
    border-right: 3px solid transparent;
  }
  
  .character-card:hover::before,
  .character-card:hover::after {
    width: 25px;
    height: 25px;
  }
  
  .character-card.selected::before,
  .character-card.selected::after {
    border-color: var(--color-secondary);
    width: 30px;
    height: 30px;
  }
  
  /* Character avatar with pixelated rendering */
  .character-avatar {
    width: 100px;
    height: 100px;
    margin: 0 auto var(--spacing-md);
    background-color: var(--color-bg-darker);
    border: var(--border-thickness) solid var(--color-primary-dark);
    padding: 8px;
    border-radius: 10px;
    overflow: hidden;
    position: relative;
  }
  
  .character-avatar img {
    width: 100%;
    height: 100%;
    object-fit: contain;
    image-rendering: pixelated;
    transition: transform 0.3s ease;
  }
  
  .character-card:hover .character-avatar img {
    transform: scale(1.1);
  }
  
  /* Character name */
  .character-name {
    font-size: 1.5rem;
    color: var(--color-primary);
    text-align: center;
    margin-bottom: var(--spacing-md);
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.7);
  }
  
  /* Character custom badge */
  .custom-badge {
    position: absolute;
    top: 10px;
    right: 10px;
    background-color: var(--color-secondary);
    color: white;
    font-size: 0.7rem;
    padding: 3px 8px;
    border-radius: 15px;
    z-index: 2;
  }
  
  /* Character stats with improved progress bars */
  .character-stats {
    margin-bottom: var(--spacing-md);
  }
  
  .stat-row {
    display: flex;
    align-items: center;
    margin-bottom: var(--spacing-sm);
  }
  
  .stat-label {
    width: 110px;
    font-size: 0.9rem;
    color: var(--color-text-muted);
    margin-right: var(--spacing-sm);
    text-align: right;
  }
  
  .stat-bar-container {
    flex: 1;
    height: 12px;
    background-color: var(--color-bg-darker);
    border-radius: 6px;
    overflow: hidden;
    position: relative;
  }
  
  .stat-bar {
    height: 100%;
    border-radius: 6px;
    transition: width 0.5s ease;
  }
  
  /* Different colors for different stats */
  .stat-intelligence .stat-bar {
    background: linear-gradient(90deg, var(--color-primary-dark), var(--color-primary));
  }
  
  .stat-persistence .stat-bar {
    background: linear-gradient(90deg, var(--color-secondary-dark), var(--color-secondary));
  }
  
  .stat-adaptability .stat-bar {
    background: linear-gradient(90deg, var(--color-accent-purple), #b68ee3);
  }
  
  /* Character abilities with tag styling */
  .character-abilities {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
    justify-content: center;
    margin-bottom: var(--spacing-md);
  }
  
  .ability-tag {
    background-color: var(--color-primary-dark);
    color: white;
    padding: 4px 10px;
    border-radius: 15px;
    font-size: 0.8rem;
    transition: all 0.2s ease;
    border: 1px solid transparent;
  }
  
  .ability-tag:hover {
    transform: translateY(-2px);
    box-shadow: 0 3px 5px rgba(0, 0, 0, 0.2);
    border-color: var(--color-primary-light);
  }
  
  /* Delete button for custom characters */
  .delete-btn {
    position: absolute;
    top: 10px;
    left: 10px;
    width: 25px;
    height: 25px;
    background-color: rgba(230, 126, 115, 0.2);
    color: var(--color-danger);
    border-radius: 50%;
    border: none;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1rem;
    cursor: pointer;
    transition: all 0.2s ease;
    z-index: 2;
  }
  
  .delete-btn:hover {
    background-color: var(--color-danger);
    color: white;
    transform: rotate(90deg);
  }
  
  /* Empty state message styling */
  .empty-state {
    grid-column: 1 / -1;
    text-align: center;
    padding: var(--spacing-xl);
    background-color: rgba(30, 34, 50, 0.7);
    border-radius: 8px;
    border: 2px dashed var(--color-primary-dark);
  }
  
  .empty-state-icon {
    font-size: 3rem;
    color: var(--color-primary);
    margin-bottom: var(--spacing-md);
    opacity: 0.5;
  }
  
  .empty-state-text {
    font-size: 1.2rem;
    color: var(--color-text);
    margin-bottom: var(--spacing-md);
  }
  
  /* Action buttons styling */
  .action-buttons {
    display: flex;
    justify-content: center;
    gap: var(--spacing-md);
    margin-top: var(--spacing-xl);
  }
  
  .action-button {
    min-width: 180px;
    padding: var(--spacing-md) var(--spacing-lg);
    font-family: var(--font-main);
    text-transform: uppercase;
    border: none;
    font-size: 1rem;
    text-align: center;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    color: white;
    text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.5);
  }
  
  .action-button::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.2),
      transparent
    );
    transition: left 0.7s ease;
  }
  
  .action-button:hover::before {
    left: 100%;
  }
  
  .action-button:hover {
    transform: translateY(-3px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
  }
  
  .action-button:active {
    transform: translateY(-1px);
  }
  
  .select-button {
    background-color: var(--color-secondary);
    box-shadow: 0 4px 0 var(--color-secondary-dark);
  }
  
  .select-button:hover {
    background-color: var(--color-secondary-light);
  }
  
  .select-button:disabled {
    background-color: #555;
    box-shadow: none;
    cursor: not-allowed;
    transform: none;
    opacity: 0.7;
  }
  
  .create-button {
    background-color: var(--color-primary);
    box-shadow: 0 4px 0 var(--color-primary-dark);
  }
  
  .create-button:hover {
    background-color: var(--color-primary-light);
  }
  
  .back-button {
    background-color: var(--color-bg-light);
    box-shadow: 0 4px 0 var(--color-bg-darker);
    color: var(--color-text);
  }
  
  .back-button:hover {
    background-color: var(--color-primary-dark);
    color: white;
  }
  
  /* Toast notifications */
  .toast-container {
    position: fixed;
    top: 20px;
    right: 20px;
    z-index: 1000;
  }
  
  .toast {
    background-color: var(--color-bg-light);
    border-left: 4px solid var(--color-primary);
    padding: 15px 20px;
    margin-bottom: 10px;
    min-width: 280px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    animation: slideIn 0.3s, fadeOut 0.5s 2.5s forwards;
    display: flex;
    align-items: center;
    border-radius: 4px;
  }
  
  .toast-icon {
    margin-right: 10px;
    font-size: 1.2rem;
  }
  
  .toast.success {
    border-left-color: var(--color-secondary);
  }
  
  .toast.success .toast-icon {
    color: var(--color-secondary);
  }
  
  .toast.error {
    border-left-color: var(--color-danger);
  }
  
  .toast.error .toast-icon {
    color: var(--color-danger);
  }
  
  @keyframes slideIn {
    from { transform: translateX(100%); }
    to { transform: translateX(0); }
  }
  
  @keyframes fadeOut {
    from { opacity: 1; }
    to { opacity: 0; }
  }
  
  /* Loading animation */
  .loading-spinner {
    display: inline-block;
    width: 25px;
    height: 25px;
    border: 3px solid rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    border-top-color: white;
    animation: spin 1s ease-in-out infinite;
    margin-right: 10px;
  }
  
  @keyframes spin {
    to { transform: rotate(360deg); }
  }
  
  /* Media queries for responsiveness */
  @media (max-width: 768px) {
    .character-grid {
      grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
    }
  
    .action-buttons {
      flex-direction: column;
      align-items: center;
    }
  
    .action-button {
      width: 100%;
      max-width: 300px;
    }
  }
  
  @media (max-width: 480px) {
    .character-grid {
      grid-template-columns: 1fr;
    }
  
    .selection-title {
      font-size: 2rem;
    }
  }

  /* Star background animation styles */
/* Add this to the character_select.css file */

.star-bg {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  z-index: -1;
}

.star {
  position: absolute;
  background-color: rgba(255, 255, 255, 0.8);
  border-radius: 50%;
  animation: twinkle 4s infinite alternate;
}

@keyframes twinkle {
  0% { opacity: 0.3; }
  50% { opacity: 1; }
  100% { opacity: 0.3; }
}

/* Add these other effects to enhance the retro feel */

.scanlines {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  z-index: 100;
  pointer-events: none;
  background: linear-gradient(
    to bottom,
    rgba(18, 16, 16, 0) 50%,
    rgba(0, 0, 0, 0.1) 50%
  );
  background-size: 100% 4px;
  opacity: 0.15;
}

/* Add pixel decorations */
.pixel-decoration {
  position: absolute;
  width: 10px;
  height: 10px;
  background-color: var(--color-primary);
  opacity: 0.3;
  z-index: 1;
}

.pixel-corner {
  position: absolute;
  width: 15px;
  height: 15px;
  border: 2px solid var(--color-primary);
  opacity: 0.5;
}

.pixel-corner.top-left {
  top: 20px;
  left: 20px;
  border-right: none;
  border-bottom: none;
}

.pixel-corner.top-right {
  top: 20px;
  right: 20px;
  border-left: none;
  border-bottom: none;
}

.pixel-corner.bottom-left {
  bottom: 20px;
  left: 20px;
  border-right: none;
  border-top: none;
}

.pixel-corner.bottom-right {
  bottom: 20px;
  right: 20px;
  border-left: none;
  border-top: none;
}