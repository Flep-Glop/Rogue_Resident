/* character_sprites.css - Styling for character sprites and animations */

/* Character sprite container */
.character-sprite-container {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  position: relative;
}

/* Wide sprite support */
.character-sprite-container.wide-sprite {
  width: auto !important; /* Allow natural width */
  max-width: none !important; /* Ensure no constraints */
  transform-origin: center center;
  z-index: 10; /* Ensure it appears above other elements */
}

/* Character avatar for sprites */
.character-avatar {
  width: 120px; /* Increased size */
  height: 120px; /* Increased size */
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  overflow: hidden; /* Default to hidden overflow */
  background-color: rgba(0, 0, 0, 0.2);
  border-radius: 5px;
}

/* When in ability mode, allow container to expand */
.character-avatar.ability-mode {
  overflow: visible !important;
  z-index: 10; /* Ensure ability animation displays above other elements */
}

/* Animation elements */
.character-sprite {
  image-rendering: pixelated;
  image-rendering: crisp-edges;
  -webkit-font-smoothing: none;
  transform-origin: center center !important;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(1); /* Default scale */
}

/* When scaling is applied via JS, transform will combine scaling with centering */
.character-sprite[style*="scale"] {
  transform: translate(-50%, -50%) scale(var(--character-scale, 1));
}

/* Single image sprites */
.character-animation-gif {
  image-rendering: pixelated;
  image-rendering: crisp-edges;
  -webkit-font-smoothing: none;
  transform-origin: center center !important;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(1);
}

.character-animation-gif[style*="scale"] {
  transform: translate(-50%, -50%) scale(var(--character-scale, 1));
}

/* Animation control buttons */
.animation-controls {
  display: flex;
  justify-content: center;
  gap: 8px;
  margin-top: 10px;
}

.animation-controls button {
  background-color: #1e1e2a;
  color: white;
  border: 1px solid #5b8dd9;
  border-radius: 4px;
  padding: 4px 8px;
  font-size: 12px;
  cursor: pointer;
  transition: all 0.2s;
}

.animation-controls button:hover {
  background-color: #5b8dd9;
}

.animation-controls button:active {
  transform: translateY(1px);
}

/* Specific animation keyframes */

/* Idle animation - gentle bobbing */
@keyframes character-idle {
  0% { transform: translateY(0); }
  50% { transform: translateY(-2px); }
  100% { transform: translateY(0); }
}

/* Walking animation for sprite sheets */
@keyframes character-walking {
  from { background-position: 0% 0; }
  to { background-position: -400% 0; } /* For 4-frame animations */
}

/* Ability animation for sprite sheets */
@keyframes character-ability {
  from { background-position: 0% 0; }
  to { background-position: -600% 0; } /* For 6-frame animations */
}

/* Special ability animation for wide sprite sheets */
@keyframes character-special-ability {
  from { background-position: 0% 0; }
  to { background-position: -1000% 0; } /* For 10-frame animations */
}

/* Character hit animation */
@keyframes character-hit {
  0% { filter: none; transform: translateX(0); }
  25% { filter: brightness(1.5) saturate(1.5); transform: translateX(-2px); }
  50% { filter: brightness(1.2) saturate(1.2); transform: translateX(2px); }
  75% { filter: brightness(1.3) saturate(1.3); transform: translateX(-1px); }
  100% { filter: none; transform: translateX(0); }
}

/* Class-based animation triggers */
.character-idle {
  animation: character-idle 3s ease-in-out infinite;
}

.character-walking {
  animation: character-walking 0.8s steps(4) infinite;
}

.character-ability {
  animation: character-ability 0.6s steps(6) forwards;
}

.character-special-ability {
  animation: character-special-ability 0.8s steps(10) forwards;
}

/* Character hit animation */
.character-hit {
  animation: character-hit 0.3s ease-in-out;
}

/* Animation for ability activation */
.ability-flash {
  animation: ability-flash 0.5s ease-in-out;
}

@keyframes ability-flash {
  0% { filter: brightness(1); }
  50% { filter: brightness(1.5) saturate(1.5); }
  100% { filter: brightness(1); }
}

/* Special effects for ability animations */
.ability-glow {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
  background: radial-gradient(
    ellipse at center,
    rgba(91, 141, 217, 0.3) 0%,
    rgba(91, 141, 217, 0) 70%
  );
  opacity: 0;
  transition: opacity 0.3s;
}

.ability-active .ability-glow {
  opacity: 1;
  animation: pulse-glow 1s infinite;
}

@keyframes pulse-glow {
  0% { opacity: 0.3; }
  50% { opacity: 0.7; }
  100% { opacity: 0.3; }
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .character-avatar {
    width: 80px;
    height: 80px;
  }
  
  .animation-controls button {
    font-size: 10px;
    padding: 3px 6px;
  }
}

/* In character_sprites.css or through the character_animation_enhanced.js */
.character-avatar {
  width: 97px;  /* Match the width of a single frame */
  height: 108px; /* Height of a single frame (864/8) */
  overflow: hidden;
}

.character-sprite {
  image-rendering: pixelated;
  image-rendering: crisp-edges;
}

/* Debug styling */
.character-avatar {
  border: 2px solid #5b8dd9 !important;
  background-color: rgba(91, 141, 217, 0.1) !important;
}

.sprite-outer-container {
  background-color: rgba(0, 0, 0, 0.2);
}

.character-sprite {
  image-rendering: pixelated !important;
  image-rendering: crisp-edges !important;
  -webkit-font-smoothing: none;
}