medical_physics_game/
â”‚
â”œâ”€â”€ data/                          # Game data files
â”‚   â”œâ”€â”€ characters.json            # Character definitions
â”‚   â”œâ”€â”€ events.json                # Random events data
â”‚   â”œâ”€â”€ floors.json                # Floor definitions
â”‚   â”œâ”€â”€ game_config.json           # Game configuration settings
â”‚   â”œâ”€â”€ items.json                 # Game items
â”‚   â”œâ”€â”€ node_types.json ðŸ”´         # Node type definitions
â”‚   â”œâ”€â”€ patient_cases.json         # Clinical scenarios
â”‚   â””â”€â”€ questions.json             # Question database
â”‚
â”œâ”€â”€ plugins/                       # Plugin system
â”‚   â”œâ”€â”€ __init__.py
â”‚   â””â”€â”€ question_plugin.py ðŸ”µ      # Example node type plugin
â”‚
â”œâ”€â”€ static/
â”‚   â”œâ”€â”€ css/                       # Styling
â”‚   â”‚   â”œâ”€â”€ animations.css         # Animation definitions
â”‚   â”‚   â”œâ”€â”€ main.css               # Main CSS import file
â”‚   â”‚   â”œâ”€â”€ base/
â”‚   â”‚   â”‚   â”œâ”€â”€ layout.css         # Core layout styling
â”‚   â”‚   â”‚   â”œâ”€â”€ reset.css          # CSS reset
â”‚   â”‚   â”‚   â””â”€â”€ variables.css ðŸŸ¢   # CSS variables (colors, sizes)
â”‚   â”‚   â”œâ”€â”€ components/
â”‚   â”‚   â”‚   â”œâ”€â”€ character.css      # Character panel styling
â”‚   â”‚   â”‚   â”œâ”€â”€ inventory.css      # Inventory styling
â”‚   â”‚   â”‚   â”œâ”€â”€ map.css            # Map styling
â”‚   â”‚   â”‚   â””â”€â”€ nodes.css ðŸŸ¢       # Node styling
â”‚   â”‚   â””â”€â”€ themes/
â”‚   â”‚       â””â”€â”€ retro-theme.css ðŸŸ¢ # Theme styling
â”‚   â”‚
â”‚   â””â”€â”€ js/                        # JavaScript files
â”‚       â”œâ”€â”€ api-client.js          # API communication
â”‚       â”œâ”€â”€ error_handler.js       # Error handling system
â”‚       â”œâ”€â”€ game.js ðŸŸ¡             # Main game initialization
â”‚       â”œâ”€â”€ ui-utils.js            # UI utilities
â”‚       â”œâ”€â”€ components/            # Node type components
â”‚       â”‚   â”œâ”€â”€ elite_component.js
â”‚       â”‚   â”œâ”€â”€ event_component.js ðŸ”´
â”‚       â”‚   â”œâ”€â”€ question_component.js ðŸ”´
â”‚       â”‚   â”œâ”€â”€ shop_component.js ðŸ”´
â”‚       â”‚   â””â”€â”€ treasure_component.js ðŸ”´
â”‚       â”œâ”€â”€ engine/                # Core game engine
â”‚       â”‚   â”œâ”€â”€ component-utils.js ðŸ”´ # Component utilities
â”‚       â”‚   â”œâ”€â”€ debug_tools.js
â”‚       â”‚   â”œâ”€â”€ event_system.js ðŸŸ¡   # Event handling
â”‚       â”‚   â”œâ”€â”€ node_components.js ðŸ”´ # Component registration
â”‚       â”‚   â”œâ”€â”€ node_registry.js ðŸ”´   # Node type registry
â”‚       â”‚   â”œâ”€â”€ node_system_integrator.js
â”‚       â”‚   â”œâ”€â”€ progression.js ðŸŸ¡     # Game progression rules
â”‚       â”‚   â”œâ”€â”€ save_manager.js
â”‚       â”‚   â””â”€â”€ state_manager.js ðŸŸ¡   # Game state management
â”‚       â””â”€â”€ ui/                    # UI components
â”‚           â”œâ”€â”€ character_panel.js
â”‚           â”œâ”€â”€ feedback_system.js
â”‚           â”œâ”€â”€ inventory_system.js
â”‚           â”œâ”€â”€ map_renderer.js
â”‚           â”œâ”€â”€ node_interaction.js ðŸ”´ # Node interaction handling
â”‚           â””â”€â”€ special_interactions.js ðŸŸ¡ # Special game mechanics
â”‚
â”œâ”€â”€ templates/                     # HTML templates
â”‚   â”œâ”€â”€ character_select.html
â”‚   â”œâ”€â”€ index.html                 # Main game page
â”‚   â””â”€â”€ landing.html               # Landing page
â”‚
â”œâ”€â”€ app.py ðŸŸ¡                      # Flask application (backend)
â”œâ”€â”€ data_manager.py                # JSON data loading/saving
â”œâ”€â”€ db_utils.py                    # Database utilities
â”œâ”€â”€ game_state.py ðŸŸ¡               # Backend game state
â”œâ”€â”€ map_generator.py               # Floor map generation
â””â”€â”€ node_plugins.py ðŸ”µ             # Plugin system for node types
